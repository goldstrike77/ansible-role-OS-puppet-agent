---
- name: Check the classifie group ID.
  uri:
    url: 'https://{{ puppet_master }}:{{ puppet_port.API }}/classifier-api/v1/groups'
    method: 'GET'
    status_code: '200'
    validate_certs: 'no'
    headers:
      X-Requested-By: '{{ ansible_default_ipv4.address }}'
      X-Authentication: '{{ token_status.json.token }}'
      cache-control: 'no-cache'
  environment:
    no_proxy: '{{ puppet_master }}'
  register: inventory_group_status
  until: inventory_group_status.status == 200
  retries: 3
  delay: 3
  changed_when: false
  failed_when: false
  no_log: true

- set_fact:
     puppet_top_group_id: "{{ ( inventory_group_status.json | json_query('[?name==`All Nodes`].id') )[0] }}"
     puppet_env_group_id: "{{ ( inventory_group_status.json | json_query('[?name==`{{ puppet_group | lower }}`].id') )[0] }}"
     puppet_nod_group_id: "{{ ( inventory_group_status.json | json_query('[?name==``].id') )[0] }}"
  

- debug:
    var: inventory_group_status.json | json_query('[?name==`development`].id')

- name: Create a puppet environment node group.
  uri:
    url: 'https://{{ puppet_master }}:{{ puppet_port.API }}/classifier-api/v1/groups'
    method: 'POST'
    force_basic_auth: 'yes'
    body: {"name": "{{ puppet_group | lower }}", "environment": "{{ puppet_environment }}", "parent": "{{ ( inventory_group_status.json | json_query('[?name==`All Nodes`].id') )[0] }}", "classes": {}}
    body_format: 'json'
    validate_certs: 'no'
    headers:
      X-Authentication: '{{ token_status.json.token }}'
      X-Requested-By: '{{ ansible_default_ipv4.address }}'
      cache-control: 'no-cache'
  environment:
    no_proxy: '{{ puppet_master }}'
  register: node_main_group_status
  until: node_main_group_status.status == 303 or node_main_group_status.status == 422
  retries: 3
  delay: 3
  no_log: true
  when: ( inventory_group_status.json | json_query('[?name==`{{ puppet_group | lower }}`].id') ) is none

- debug:
    var: node_main_group_status
