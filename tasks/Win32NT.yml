---
- name: Include OS-specific variables
  include_vars: '{{ ansible_os_family }}.yml'

- name: Check Puppet master API are accessible from current host.
  win_wait_for:
    host: '{{ puppet_master }}'
    port: '{{ puppet_port.API }}'
    state: 'started'
    delay: 0
    timeout: 10
  changed_when: false
  failed_when: false
  register: check_puppet_api

- name: Puppet agent operation.
  block:
    - name: Generate Puppet access token using the API endpoint.
      win_uri:
        url: 'https://{{ puppet_master }}:{{ puppet_port.API }}/rbac-api/v1/auth/token'
        method: 'POST'
        return_content: 'yes'
        force_basic_auth: 'yes'
        status_code: '200'
        body: '{"login": "{{ puppet_admin_user }}", "password": "{{ puppet_admin_pass }}", "lifetime": "10m"}'
        validate_certs: 'no'
        headers:
          Content-Type: 'application/json'
          X-Requested-By: '{{ ansible_ip_addresses[0] }}'
          cache-control: 'no-cache'
      environment:
        no_proxy: '{{ puppet_master }}'
      register: token_status
      until: token_status.status_code == 200
      retries: 3
      delay: 3
      no_log: true
    - name: Check the node is connected to the PCP broker already.
      win_uri:
        url: 'https://{{ puppet_master }}:8143/orchestrator/v1/inventory/{{ ansible_fqdn | lower }}'
        return_content: 'yes'
        method: 'GET'
        status_code: '200'
        validate_certs: 'no'
        headers:
          X-Requested-By: '{{ ansible_ip_addresses[0] }}'
          X-Authentication: '{{ token_status.json.token }}'
          cache-control: 'no-cache'
      environment:
        no_proxy: '{{ puppet_master }}'
      register: inventory_node_status
      until: inventory_node_status.status_code == 200
      retries: 3
      delay: 3
      changed_when: false
      failed_when: false
      no_log: true
  when:
    - check_puppet_api.msg is not defined
